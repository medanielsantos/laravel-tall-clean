name: CD

on:
  push:
    branches:
      - develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo

      - name: Install Composer dependencies
        run: composer install --optimize-autoloader --no-dev --prefer-dist --no-interaction

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Optimize Laravel
        run: php artisan optimize

      - name: Event Cache
        run: php artisan event:cache

      - name: View Cache
        run: php artisan view:cache

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Check PHP Code style
        run: composer check

      - name: Run PHP Linter
        run: composer lint

      - name: Check route integrity
        run: php artisan route:list -c

      - name: Set up Node and Compile assets
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - run: npm install --frozen-lockfile
      - run: npm run production
      - run: rm -rf node_modules vendor

      - name: SSH Server Deploy
        uses: kostya-ten/ssh-server-deploy@v3
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          scp_source: ./*
          scp_target: ${{ secrets.SERVER_PATH }}
          before_script: cd ${{ secrets.SERVER_PATH }}
            && chmod -R 777 storage bootstrap/cache
          after_script: cd ${{ secrets.SERVER_PATH }}
            && rm -rf vendor
            && php composer install --optimize-autoloader --no-dev --prefer-dist --no-interaction
            && php artisan optimize:clear
            && php artisan optimize
            && php artisan view:cache
            && php artisan event:cache
            && php artisan migrate --force
